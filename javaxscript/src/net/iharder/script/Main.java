/*
 * Main.java
 *
 * Created on October 14, 2008, 8:19 PM
 */

package net.iharder.script;

import java.awt.Component;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.script.*;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  rob
 */
public class Main extends javax.swing.JFrame {

    private Preferences prefs = Prefs.get(this);

    /** Creates new form Main */
    public Main() {
        initComponents();
        myInitComponents();
    }
    
    private void myInitComponents(){
        
        ScriptEngineManager manager = new ScriptEngineManager();
        List<ScriptEngineFactory> factories = manager.getEngineFactories();
        for( ScriptEngineFactory f : factories ){
            addFactory( f );
        }
    }
    
    
    /**
     * Adds a ScriptEngineFactory to the layout.
     * Call on event thread.
     * @param factory
     */
    private void addFactory( ScriptEngineFactory factory ){
        int prevCount = this.enginesTabbedPane.getTabCount();
        for( int i = 0; i < prevCount; i++ ){
            EnginePane ep = (EnginePane)this.enginesTabbedPane.getComponent(i);
            ScriptEngineFactory f = ep.getFactory();
            System.out.println("Inspecting " + f.getEngineName() );
            if( ep != null && factory.getEngineName().equals(f.getEngineName()) && factory.getEngineVersion().equals( f.getEngineVersion() ) ){
                System.out.println("Already have this loaded: " + factory.getEngineName() );
                return;
            }
        }
        EnginePane pane = new EnginePane();
        pane.setFactory( factory );
        this.enginesTabbedPane.add( pane );
    }
    
    private void loadFromJarsButton(){
            
    LoadFromJarsPanel panel = new LoadFromJarsPanel();
    panel.setPreferences(prefs);
    int result = JOptionPane.showConfirmDialog(this, panel);
    if( result == JOptionPane.OK_OPTION ){
        List<File> files = panel.getFiles();
        URL[] urls = new URL[ files.size() ];
        for( int i = 0; i < urls.length; i++ ){
            try {
                File f = files.get(i);
                String urlPath;
                urlPath = "jar:file://" + f.getCanonicalPath() + "!/";
                urls[i] = new URL(urlPath);
            } catch (MalformedURLException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        System.out.println("URLs to load:");
        for( int i = 0; i < urls.length; i++ ){
            System.out.println("  " + urls[i] );
        }
        URLClassLoader loader = URLClassLoader.newInstance( urls, this.getClass().getClassLoader() );
        ScriptEngineManager manager = new ScriptEngineManager(loader); // Takes some time
        List<ScriptEngineFactory> factories = manager.getEngineFactories();
        for( ScriptEngineFactory f : factories ){
            addFactory( f );
        }
    }   // end if: OK
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        enginesTabbedPane = new javax.swing.JTabbedPane();
        jLabel1 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Javax Scripting Explorer");

        jLabel1.setText("<html>Welcome to the Javax Script Explorer. You have the following Script Engines in your classpath:</html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(enginesTabbedPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(enginesTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane enginesTabbedPane;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
