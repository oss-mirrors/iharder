
package rvision;

import java.io.IOException;
import java.util.Dictionary;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JSlider;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;


/**
 *
 * @author rob
 */
public class ControlPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 3895088745682591963L;

    private Camera cam;
    private ManagedCamera mCam;
    private SnapshotHandler snap;
    private ManagedCameraVisualComponentListener mCamVisual;

    public static void main(String[] args) {
        new ControlPanel();
    }

    /** Creates new form ControlPanel */
    public ControlPanel() {
        initComponents();
        myInitComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        zoomSlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        panTiltPanel = new javax.swing.JPanel();

        jLabel1.setText("Title:");

        titleField.setColumns(12);
        titleField.setToolTipText("The title overlaid on the video");
        titleField.setName("title"); // NOI18N

        jLabel2.setText("Zoom:");

        zoomSlider.setPaintLabels(true);
        zoomSlider.setToolTipText("Zoom in and out");
        zoomSlider.setName("zoom"); // NOI18N
        zoomSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                zoomSliderStateChanged(evt);
            }
        });

        jLabel3.setText("Pan/Tilt:");

        panTiltPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panTiltPanelLayout = new javax.swing.GroupLayout(panTiltPanel);
        panTiltPanel.setLayout(panTiltPanelLayout);
        panTiltPanelLayout.setHorizontalGroup(
            panTiltPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 142, Short.MAX_VALUE)
        );
        panTiltPanelLayout.setVerticalGroup(
            panTiltPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 135, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleField, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(zoomSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(15, 15, 15)
                        .addComponent(panTiltPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(zoomSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panTiltPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void zoomSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_zoomSliderStateChanged
        JSlider source = (JSlider) evt.getSource();
        int val = (int) source.getValue();
        ManagedCamera mc = this.mCam;
        if( mc != null ){
            mc.setZoom( val * 0.01 );
        }
    }//GEN-LAST:event_zoomSliderStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel panTiltPanel;
    private javax.swing.JTextField titleField;
    private javax.swing.JSlider zoomSlider;
    // End of variables declaration//GEN-END:variables

    private void myInitComponents()  {
        Dictionary labels = new Hashtable();
        labels.put(0,new JLabel("Wide"));
        labels.put(100,new JLabel("Close"));
        this.zoomSlider.setLabelTable(labels);
        this.zoomSlider.setValue(0);
        //try {
        //    this.cam = new Camera("/dev/cu.PL2303-0000103D");
        //} catch (IOException ex) {
        //    Logger.getLogger(ControlPanel.class.getName()).log(Level.SEVERE, null, ex);
        //}
        this.mCam = new ManagedCamera( this.cam );
        //this.mCamVisual = new ManagedCameraVisualComponentListener( this.mCam, this.panTiltPanel, this.snap );
        this.titleField.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                updateTitle();
            }
            public void removeUpdate(DocumentEvent e) {
                updateTitle();
            }
            public void changedUpdate(DocumentEvent e) {
                updateTitle();
            }
        });
    }

    
    private void updateTitle() {
        String title = this.titleField.getText();
        ManagedCamera mc = this.mCam;
        if( mc != null ){
            if( title.length() == 0 ){
                mc.setShowTitle( false );
            } else {
                mc.setTitle( title );
                mc.setShowTitle( true );
            }
        }   // end if: mc != null
    }

}
